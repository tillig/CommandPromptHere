{"version":3,"sources":["PromptStrategies.ts","Step1.tsx","Step2.tsx","Step3.tsx","MasterForm.tsx","App.tsx","index.tsx"],"names":["PromptStrategies","id","accelerator","commandLine","name","Step1","this","props","currentStep","className","htmlFor","value","promptId","onChange","handleChange","map","item","React","Component","Step2","type","prompt","required","aria-describedby","Step3","downloadInf","bind","cmdLine","replace","infContent","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","onClick","startOver","MasterForm","state","formValid","_next","_prev","_resetForm","_validateForm","handlePromptSelectionChange","handlePromptDetailChange","setState","form","getElementById","reportValidity","disabled","event","target","split","clone","Object","assign","found","find","undefined","preventDefault","stopPropagation","currentTarget","onSubmit","handleSubmit","Fragment","previousButton","nextButton","App","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","role","Container","Row","Col","data-href","data-send","data-width","data-show-faces","width","height","data-ad-client","data-ad-slot","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5795f18a.chunk.js","sourcesContent":["/**\n * Defines a single prompt strategy that can be selected for download.\n */\nexport interface PromptStrategy {\n  /**\n   * Uniquely identifies the type of command prompt. This value is used in the\n   * INF file and the registry.\n   */\n  id: string;\n\n  /**\n   * The display text (including accelerator key) for the command prompt\n   * within the context menu.\n   */\n  accelerator: string;\n\n  /**\n   * The full command line to start the command prompt.\n   */\n  commandLine: string;\n\n  /**\n   * A short display name of the prompt represented by this package.\n   */\n  name: string;\n}\n\n/**\n * The set of all implemented prompt strategies. The key in the object is the\n * unique ID for use in the INF file and registry.\n */\nexport const PromptStrategies = [\n  {\n    id: 'DosHere',\n    accelerator: 'Command &Prompt Here',\n    commandLine: '%11%\\\\cmd.exe /k cd /d \"%1\"',\n    name: 'Command Prompt',\n  } as PromptStrategy,\n  {\n    id: 'PowerShellHere',\n    accelerator: 'Po&werShell Prompt Here',\n    commandLine: '\"%11%\\\\windowspowershell\\\\v1.0\\\\powershell.exe\" -NoExit \"cd \\'% 1\\'\"',\n    name: 'PowerShell Prompt',\n  } as PromptStrategy,\n  // The /v:on allows for delayed environment variable processing using\n  // !var! syntax instead of %var% syntax. Otherwise you can't expand\n  // environment variables like %VS100COMNTOOLS% because %V has special meaning.\n  {\n    id: 'VS2003CmdHere',\n    accelerator: 'VS 200&3 Prompt Here',\n    commandLine: '%11%\\\\cmd.exe /v:on /k cd /d \"%1\" && \"!VS71COMNTOOLS!vsvars32.bat\"',\n    name: 'VS 2003 Command Prompt',\n  } as PromptStrategy,\n  {\n    id: 'VS2005CmdHere',\n    accelerator: 'VS 200&5 Prompt Here',\n    commandLine: '%11%\\\\cmd.exe /v:on /k cd /d \"%1\" && \"!VS80COMNTOOLS!vsvars32.bat\"',\n    name: 'VS 2005 Command Prompt',\n  } as PromptStrategy,\n  {\n    id: 'VS2008CmdHere',\n    accelerator: 'VS 200&8 Prompt Here',\n    commandLine: '%11%\\\\cmd.exe /v:on /k cd /d \"%1\" && \"!VS90COMNTOOLS!vsvars32.bat\"',\n    name: 'VS 2008 Command Prompt',\n  } as PromptStrategy,\n  {\n    id: 'VS2010X86CmdHere',\n    accelerator: 'VS 2010 X&86 Prompt Here',\n    commandLine: '%11%\\\\cmd.exe /v:on /k cd /d \"%1\" && \"!VS100COMNTOOLS!..\\\\..\\\\VC\\\\vcvarsall.bat\" x86',\n    name: 'VS 2010 (x86) Command Prompt',\n  } as PromptStrategy,\n  {\n    id: 'VS2010X64CmdHere',\n    accelerator: 'VS 2010 X&64 Prompt Here',\n    commandLine: '%11%\\\\cmd.exe /v:on /k cd /d \"%1\" && \"!VS100COMNTOOLS!..\\\\..\\\\VC\\\\vcvarsall.bat\" amd64',\n    name: 'VS 2010 (x64) Command Prompt',\n  } as PromptStrategy,\n  {\n    id: 'VS2012DevCmdHere',\n    accelerator: 'VS 2012 &Dev Prompt Here',\n    commandLine: '%11%\\\\cmd.exe /v:on /k cd /d \"%1\" && \"!VS110COMNTOOLS!..\\\\..\\\\VC\\\\vcvarsall.bat\" x86',\n    name: 'VS 2012 Developer Command Prompt',\n  } as PromptStrategy,\n  {\n    id: 'VS2012NativeX64Cmd',\n    accelerator: 'VS 2012 X6&4 Command Prompt',\n    commandLine: '%11%\\\\cmd.exe /v:on /k cd /d \"%1\" && \"!VS110COMNTOOLS!..\\\\..\\\\VC\\\\vcvarsall.bat\" amd64',\n    name: 'VS 2012 Native x64 Command Prompt',\n  } as PromptStrategy,\n  {\n    id: 'VS2013DevCmdHere',\n    accelerator: 'VS 2013 &Dev Prompt Here',\n    commandLine: '%11%\\\\cmd.exe /v:on /k cd /d \"%1\" && \"!VS120COMNTOOLS!VsDevCmd.bat\"',\n    name: 'VS 2013 Developer Command Prompt',\n  } as PromptStrategy,\n  {\n    id: 'VS2015DevCmdHere',\n    accelerator: 'VS 2015 &Dev Prompt Here',\n    commandLine: '%11%\\\\cmd.exe /v:on /k cd /d \"%1\" && \"!VS140COMNTOOLS!VsDevCmd.bat\"',\n    name: 'VS 2015 Developer Command Prompt',\n  } as PromptStrategy,\n  {\n    id: 'VS2017CommunityDevCmdHere',\n    accelerator: 'VS 201&7 Community Prompt Here',\n    commandLine: '%11%\\\\cmd.exe /v:on /k cd /d \"%1\" && \"!ProgramFiles(x86)!\\\\Microsoft Visual Studio\\\\2017\\\\Community\\\\Common7\\\\Tools\\\\VsDevCmd.bat\"',\n    name: 'VS 2017 Community Command Prompt',\n  } as PromptStrategy,\n  {\n    id: 'VS2017EnterpriseDevCmdHere',\n    accelerator: 'VS 201&7 Enterprise Prompt Here',\n    commandLine: '%11%\\\\cmd.exe /v:on /k cd /d \"%1\" && \"!ProgramFiles(x86)!\\\\Microsoft Visual Studio\\\\2017\\\\Enterprise\\\\Common7\\\\Tools\\\\VsDevCmd.bat\"',\n    name: 'VS 2017 Enterprise Command Prompt',\n  } as PromptStrategy,\n  {\n    id: 'VS2017ProfessionalDevCmdHere',\n    accelerator: 'VS 201&7 Professional Prompt Here',\n    commandLine: '%11%\\\\cmd.exe /v:on /k cd /d \"%1\" && \"!ProgramFiles(x86)!\\\\Microsoft Visual Studio\\\\2017\\\\Professional\\\\Common7\\\\Tools\\\\VsDevCmd.bat\"',\n    name: 'VS 2017 Professional Command Promp',\n  } as PromptStrategy,\n];\n","import { State } from './State';\nimport { Step1Properties } from './Properties';\nimport React from 'react';\nimport { PromptStrategies } from './PromptStrategies';\n\n/**\n * Step 1: Select your prompt.\n */\nexport class Step1 extends React.Component<Step1Properties, State> {\n  /**\n   * Render the form.\n   * @param {Step1Properties} props The properties for the wizard.\n   * @return {React.ReactNode} The node to render.\n   */\n  render(): JSX.Element | null {\n    if (this.props.currentStep !== 1) {\n      return null;\n    }\n\n    return (\n      <div>\n        <p>This wizard allows you to generate a custom &quot;Command Prompt Here&quot; context menu item for Windows. After selecting the prompt and customizing text, a small installer will be generated for you so you can use your prompt.</p>\n        <p>First, select the command prompt you&apos;d like to appear in the context menu.</p>\n        <div className=\"form-group\">\n          <label htmlFor=\"commandList\">Select command prompt</label>\n          <select\n            className=\"form-control\"\n            id=\"commandList\"\n            name=\"commandList\"\n            value={this.props.promptId}\n            onChange={this.props.handleChange}\n          >\n            {PromptStrategies.map((item) => <option value={item.id} key={item.id}>{item.name}</option>)}\n          </select>\n        </div>\n      </div>\n    );\n  }\n}\n","import { State } from './State';\nimport { Step2Properties } from './Properties';\nimport React from 'react';\n\n/**\n * Step 2: Customize settings.\n */\nexport class Step2 extends React.Component<Step2Properties, State> {\n  /**\n   * Render the form.\n   * @param {Step2Properties} props The properties for the wizard.\n   * @return {JSX.Element} Form fragment to collect the data.\n   */\n  render(): JSX.Element | null {\n    if (this.props.currentStep !== 2) {\n      return null;\n    }\n    return (\n      <div>\n        <p>If you like, customize the values for the prompt.</p>\n        <p><strong>Do so at your own risk.</strong> These values will be used in the .INF installer file that gets generated. Not much validation happens here, so you can really hose yourself if you do it wrong.</p>\n        <p><strong>Select &quot;Finish&quot; to download the prompt</strong> and see installation instructions.</p>\n        <div className=\"form-group\">\n          <label htmlFor=\"prompt_id\" className=\"form-label\">Prompt ID</label>\n          <input type=\"text\" className=\"form-control\" id=\"prompt_id\" onChange={this.props.handleChange} value={this.props.prompt?.id} required={true} />\n          <div className=\"invalid-feedback\">\n            Please choose a username.\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"prompt_name\" className=\"form-label\">Installer Name</label>\n          <input type=\"text\" className=\"form-control\" id=\"prompt_name\" onChange={this.props.handleChange} value={this.props.prompt?.name} required={true} />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"prompt_accelerator\" className=\"form-label\">Menu Text</label>\n          <input type=\"text\" className=\"form-control\" id=\"prompt_accelerator\" aria-describedby=\"acceleratorHelpBlock\" onChange={this.props.handleChange} value={this.props.prompt?.accelerator} required={true} />\n          <small id=\"acceleratorHelpBlock\" className=\"form-text text-muted\">Hint: Use an &amp; by a letter to make it a hot key. Example: Command &amp;Prompt Here</small>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"prompt_commandLine\" className=\"form-label\">Command Line</label>\n          <input type=\"text\" className=\"form-control\" id=\"prompt_commandLine\" onChange={this.props.handleChange} value={this.props.prompt?.commandLine} required={true} />\n        </div>\n      </div>\n    );\n  }\n}\n","import { State } from './State';\nimport { Step3Properties } from './Properties';\nimport React from 'react';\n\n/**\n * Step 3: Download.\n */\nexport class Step3 extends React.Component<Step3Properties, State> {\n  /**\n   * Constructor.\n   * @param {Properties} props The properties for the workflow.\n   */\n  constructor(props: Step3Properties) {\n    super(props);\n    this.downloadInf = this.downloadInf.bind(this);\n  }\n\n  /**\n   * Generates the .inf file and starts the download.\n   */\n  downloadInf(): void {\n    const cmdLine = this.props.prompt?.commandLine.replace(/\"/g, '\"\"');\n    const infContent = `;\n; ${this.props.prompt?.name} PowerToy\n;\n; Generated by Command Prompt Here Generator - Travis Illig\n; https://www.paraesthesia.com\n;\n; Template adapted from original \"CMD Prompt Here\" PowerToy\n; and Visual Studio prompt adaptations from Scott Hanselman\n; https://www.computerzen.com\n;\n\n[version]\nsignature=\"$CHICAGO$\"\n\n[DefaultInstall]\nCopyFiles = CurrentInstaller.Files.Inf\nAddReg    = CurrentInstaller.Reg.Add\n\n[DefaultUnInstall]\nDelFiles  = CurrentInstaller.Files.Inf\nDelReg    = CurrentInstaller.Reg.Add,CurrentInstaller.Reg.Remove\n\n[SourceDisksNames]\n1 = \"${this.props.prompt?.name} Here\"\n\n[SourceDisksFiles]\n${this.props.prompt?.id}.inf = 1\n\n[DestinationDirs]\nCurrentInstaller.Files.Inf = 17\n\n[CurrentInstaller.Files.Inf]\n${this.props.prompt?.id}.inf\n\n[CurrentInstaller.Reg.Add]\nHKLM,%UDHERE%\nHKLM,%UDHERE%,DisplayName,,\"%CommandPromptName%\"\nHKLM,%UDHERE%,UninstallString,,\"rundll32.exe syssetup.dll,SetupInfObjectInstallAction DefaultUninstall 132 %17%\\\\${this.props.prompt?.id}.inf\"\nHKCR,Directory\\\\Shell\\\\${this.props.prompt?.id},,,\"%CommandPromptAccel%\"\nHKCR,Directory\\\\Shell\\\\${this.props.prompt?.id}\\\\command,,,\"${cmdLine}\"\nHKCR,Drive\\\\Shell\\\\${this.props.prompt?.id},,,\"%CommandPromptAccel%\"\nHKCR,Drive\\\\Shell\\\\${this.props.prompt?.id}\\\\command,,,\"${cmdLine}\"\n\n[CurrentInstaller.Reg.Remove]\nHKLM,%UDHERE%\nHKCR,Directory\\\\Shell\\\\${this.props.prompt?.id}\nHKCR,Drive\\\\Shell\\\\${this.props.prompt?.id}\n\n[Strings]\nCommandPromptName=\"${this.props.prompt?.name} Here PowerToy\"\nCommandPromptAccel=\"${this.props.prompt?.accelerator}\"\nUDHERE=\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\\\\${this.props.prompt?.id}\"\n`;\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(infContent));\n    element.setAttribute('download', `${this.props.prompt?.id}.inf`);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  }\n\n  /**\n   * Render the form.\n   * @param {Properties} props The properties for the wizard.\n   * @return {JSX.Element} Form fragment to collect the data.\n   */\n  render(): JSX.Element | null {\n    if (this.props.currentStep !== 3) {\n      return null;\n    }\n    return (\n      <div>\n        <div className=\"row\">\n          <ol>\n            <li><strong>Click the button</strong> to download the prompt installer .inf file.</li>\n            <li><strong>Right-click</strong> the saved .inf file.</li>\n            <li><strong>Select &quot;Install&quot;</strong> to install your new context menu command prompt.</li>\n          </ol>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={this.downloadInf}\n            >\n              Download\n            </button>\n          </div>\n          <div className=\"col-md-2\">\n            <button\n              className=\"btn btn-secondary\"\n              type=\"button\"\n              onClick={this.props.startOver}>\n              Start Over\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Properties } from './Properties';\nimport { State } from './State';\nimport { Step1 } from './Step1';\nimport { Step2 } from './Step2';\nimport { Step3 } from './Step3';\nimport React from 'react';\nimport { PromptStrategies } from './PromptStrategies';\n\n/**\n * Main form that orchestrates the wizard.\n */\nexport class MasterForm extends React.Component<Properties, State> {\n  /**\n   * Constructor.\n   * @param {Properties} props The properties for the workflow.\n   */\n  constructor(props: Properties) {\n    super(props);\n    this.state = {\n      currentStep: 1,\n      promptId: PromptStrategies[0].id,\n      prompt: PromptStrategies[0],\n      formValid: true,\n    };\n\n    this._next = this._next.bind(this);\n    this._prev = this._prev.bind(this);\n    this._resetForm = this._resetForm.bind(this);\n    this._validateForm = this._validateForm.bind(this);\n    this.handlePromptSelectionChange = this.handlePromptSelectionChange.bind(this);\n    this.handlePromptDetailChange = this.handlePromptDetailChange.bind(this);\n  }\n\n  /**\n   * Move to the next step.\n   */\n  _next(): void {\n    let currentStep = this.state.currentStep;\n    // If the current step is 1 or 2, then add one on \"next\" button click\n    currentStep = currentStep >= 2 ? 3 : currentStep + 1;\n    this.setState({\n      currentStep: currentStep,\n    });\n  }\n\n  /**\n   * Back to the previous step.\n   */\n  _prev(): void {\n    let currentStep = this.state.currentStep;\n    // If the current step is 2 or 3, then subtract one on \"previous\" button click\n    currentStep = currentStep <= 1 ? 1 : currentStep - 1;\n    this.setState({\n      currentStep: currentStep,\n    });\n  }\n\n  /**\n   * Checks the form validity and updates state.\n   */\n  _resetForm(): void {\n    this.setState({\n      currentStep: 1,\n      promptId: PromptStrategies[0].id,\n      prompt: PromptStrategies[0],\n      formValid: true,\n    });\n  }\n\n  /**\n   * Checks the form validity and updates state.\n   */\n  _validateForm(): void {\n    const form = document.getElementById('commandPromptHere') as HTMLFormElement;\n    this.setState({\n      formValid: form.reportValidity(),\n    });\n  }\n\n  /**\n   * Gets the 'previous' button for the wizard.\n   */\n  get previousButton(): JSX.Element | null {\n    const currentStep = this.state.currentStep;\n    // If the current step is not 1 (start) or 3 (end), then render the \"previous\" button\n    if (currentStep === 2) {\n      return (\n        <button\n          className=\"btn btn-secondary\"\n          type=\"button\"\n          onClick={this._prev}\n          disabled={!this.state.formValid}>\n          Previous\n        </button>\n      );\n    }\n    // ...else return nothing\n    return null;\n  }\n\n  /**\n   * Gets the 'next' button for the wizard.\n   */\n  get nextButton(): JSX.Element | null {\n    const currentStep = this.state.currentStep;\n    // If the current step is not 3, then render the \"next\" button\n    if (currentStep < 3) {\n      return (\n        <button\n          className=\"btn btn-primary float-right\"\n          type=\"button\"\n          onClick={this._next}\n          disabled={!this.state.formValid}>\n          Next\n        </button>\n      );\n    }\n    // ...else render nothing\n    return null;\n  }\n\n  /**\n   * Handles a change in specific prompt details.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event that was raised to indicate a change.\n   */\n  handlePromptDetailChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    let { id, value } = event.target;\n    id = id.split('_')[1];\n    const clone = Object.assign({}, this.state.prompt) as any;\n    clone[id] = value;\n    this.setState({\n      currentStep: this.state.currentStep,\n      promptId: this.state.promptId,\n      prompt: clone,\n    });\n    this._validateForm();\n  }\n\n  /**\n   * Handles a change in selection of the prompt.\n   * @param {React.ChangeEvent<HTMLSelectElement>} event The event that was raised to indicate a change.\n   */\n  handlePromptSelectionChange(event: React.ChangeEvent<HTMLSelectElement>): void {\n    const value = event.target.value;\n    const found = PromptStrategies.find((item) => item.id === value);\n    if (found) {\n      const clone = Object.assign({}, found);\n      this.setState({\n        currentStep: this.state.currentStep,\n        promptId: found.id,\n        prompt: clone,\n      });\n    } else {\n      this.setState({\n        currentStep: this.state.currentStep,\n        promptId: undefined,\n        prompt: undefined,\n      });\n    }\n  }\n\n  /**\n   * Execute validation on form submission. Prevents submit - there's no server-side handling.\n   * @param {React.FormEvent<HTMLFormElement>} event The event that was raised to indicate submission.\n   */\n  handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n    event.preventDefault();\n    event.stopPropagation();\n    event.currentTarget.reportValidity();\n  }\n\n  /**\n   * Renders the wizard form container.\n   * @return {JSX.Element|null} The container for the steps.\n   */\n  render(): JSX.Element | null {\n    return (\n      <form id=\"commandPromptHere\" onSubmit={this.handleSubmit}>\n        <React.Fragment>\n          <h1>Command Prompt Here</h1>\n\n          <Step1\n            currentStep={this.state.currentStep}\n            promptId={this.state.promptId}\n            handleChange={this.handlePromptSelectionChange}\n          />\n          <Step2\n            currentStep={this.state.currentStep}\n            prompt={this.state.prompt}\n            promptId={this.state.promptId}\n            handleChange={this.handlePromptDetailChange}\n          />\n          <Step3\n            currentStep={this.state.currentStep}\n            prompt={this.state.prompt}\n            promptId={this.state.promptId}\n            startOver={this._resetForm}\n          />\n        </React.Fragment>\n        {this.previousButton}\n        {this.nextButton}\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { MasterForm } from './MasterForm';\nimport './App.css';\n\n// Multi-step wizard style form mostly based on this:\n// https://css-tricks.com/the-magic-of-react-based-multi-step-forms/\n// https://www.typescriptlang.org/docs/handbook/jsx.html\n\n/**\n * Main application component.\n * @return {JSX.Element} Main application container.\n */\nexport class App extends React.Component {\n  /**\n   * Render the form.\n   * @param {Properties} props The properties for the wizard.\n   * @return {React.ReactNode} The node to render.\n   */\n  render(): JSX.Element | null {\n    return (\n      <div>\n        <header>\n          <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">Command Prompt Here</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link href=\"https://github.com/tillig/CommandPromptHere\">Source on GitHub</Nav.Link>\n                <Nav.Link href=\"https://www.paraesthesia.com\">My Blog</Nav.Link>\n                <Nav.Link href=\"http://app.paraesthesia.com\">Other Apps</Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n        </header>\n        <main role=\"main\">\n          <Container>\n            <Row className=\"justify-content-md-center\">\n              <Col>\n                <MasterForm currentStep={1} />\n              </Col>\n            </Row>\n          </Container>\n        </main>\n        <footer className=\"text-muted\">\n          <Container>\n            <div className=\"social-button\">\n              <div className=\"fb-like\" data-href=\"https://www.paraesthesia.com/CommandPromptHere/\" data-send=\"true\" data-width=\"450\" data-show-faces=\"true\"></div>\n            </div>\n\n            <p className=\"disclaimer\">Wizard created by <a href=\"https://www.paraesthesia.com\">Travis Illig</a>. If you like it (or find any problems), <a href=\"https://www.paraesthesia.com\">head over to his blog and drop him a line</a>.</p>\n            <p className=\"disclaimer\"><strong>DISCLAIMER:</strong> &quot;Command Prompt Here&quot; installers set registry values. While every effort has been made to test things, the truth is I don&apos;t have the ability to verify every installer works with every combination of OS, bitness, and tool. <strong>Using any generated installer from this tool is at your own risk.</strong> The installers here are free with no warranty expressed or implied.</p>\n\n            <ins className=\"adsbygoogle\"\n              style={{ display: 'inline-block', width: '468px', height: '60px' }}\n              data-ad-client=\"ca-pub-9058541546510381\"\n              data-ad-slot=\"7960782323\"></ins>\n          </Container>\n        </footer>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}